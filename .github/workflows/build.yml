name: Continuous Integration
on: [push, pull_request]

jobs:
  linux:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    container: ubuntu:rolling
    env:
      DEBIAN_FRONTEND: "noninteractive"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Clang",
            artifact: "linux-clang.tar.xz",
            cc: "clang", cxx: "clang++",
            cmake_configure_options: '-DCMAKE_EXE_LINKER_FLAGS="-v -fuse-ld=lld"',
          }
          - {
            name: "Ubuntu GCC",
            artifact: "linux-gcc.tar.xz",
            cc: "gcc", cxx: "g++",
          }

    steps:
      - name: Update environment
        shell: bash
        run: |
          # Update package lists
          apt update -qq
          # Install build tools
          apt install -y \
            clang \
            cmake \
            curl \
            git \
            libgl1-mesa-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxcb-dri3-dev \
            libxcb-icccm4-dev \
            libxcb-image0-dev \
            libxcb-keysyms1-dev \
            libxcb-randr0-dev \
            libxcb-render-util0-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-sync-dev \
            libxcb-util-dev \
            libxcb-xfixes0-dev \
            libxcb-xinerama0-dev \
            libxcb-xkb-dev \
            lld \
            ninja-build \
            pkg-config \
            python3 \
            python3-pip \
            xkb-data \
            xorg-dev
          pip3 install wheel setuptools
          pip3 install conan mako
      - name: Install Vulkan SDK
        shell: bash
        run: |
          # Download Vulkan SDK
          curl -LS -o vulkansdk.tar.gz \
            https://sdk.lunarg.com/sdk/download/${{ env.inexor_vulkan_version }}/linux/vulkansdk-linux-x86_64-${{ env.inexor_vulkan_version }}.tar.gz
          # Create Vulkan SDK directory and extract
          mkdir "${{ env.inexor_vulkan_sdk }}"
          tar xfz vulkansdk.tar.gz -C "${{ env.inexor_vulkan_sdk }}"
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure CMake
        shell: bash
        run: |
          bash ./linux/configure.sh release
      - name: Build Engine Release
        shell: bash
        run: |
          bash ./linux/build.sh release
      - name: Prepare upload
        run: |
          tar cfz ${{ matrix.config.artifact }} build
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
