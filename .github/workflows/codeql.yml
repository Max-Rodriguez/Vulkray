# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master", "dev" ]
  schedule:
    - cron: '20 5 * * 1'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      DEBIAN_FRONTEND: "noninteractive"
      GLSL_COMPILER_VERSION: "shaderc-2022.2"
      CC_BINARY: "clang"
      CXX_BINARY: "clang++"
      CLANG_VERSION: "10"
    container:
      image: ubuntu:rolling
      options: --user root

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality
        
    - name: Install required packages
      shell: bash
      run: |
        apt update
        apt install -y \
          sudo \
          ninja-build \
          clang \
          libgl-dev
        python3 -m pip install conan
        
    - name: Create Default Conan Profile
      shell: bash
      run: |
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.compiler=${{ env.CC_BINARY }} default
        conan profile update settings.compiler.version=${{ env.CLANG_VERSION }} default
        conan profile update conf.tools.system.package_manager:mode=install default
        conan profile update conf.tools.system.package_manager:sudo=True default
        
    - name: Overwrite Default ~/.conan/settings.yml
      shell: bash
      run: |
        wget https://raw.githubusercontent.com/Vulkray/Vulkray/master/.github/workflows/conan-settings.yml
        cat conan-settings.yml > ~/.conan/settings.yml
          
    - name: Check Cached Conan Dependencies
      id: conan-cache
      uses: actions/cache@v3.0.8
      with:
        path: /github/home/.conan/data/*
        key: ${{ runner.os }}-conan-data-${{ hashFiles('**/conanfile.txt') }}
          
    - name: Check Cached GLSLC Binary
      id: glslc-cache
      uses: actions/cache@v3.0.8
      with:
        path: /bin/glslc
        key: ${{ runner.os }}-${{ env.GLSL_COMPILER_VERSION }}-binary
          
    - name: Build Google GLSL Compiler # Ubuntu/Debian doesn't package glslc binary; do if not cached!
      if: steps.glslc-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        wget https://github.com/google/shaderc/archive/refs/tags/v2022.2.tar.gz
        tar -xvf v2022.2.tar.gz
        cd shaderc-2022.2
        ./utils/git-sync-deps
        mkdir build
        cd build
        cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
        ninja
        sudo cp glslc/glslc /bin
          
    - name: Run Build Script
      shell: bash
      run: |
        export CC=${{ env.CC_BINARY }}
        export CXX=${{ env.CXX_BINARY }}
        bash ./linux/configure.sh release
        bash ./linux/build.sh release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
